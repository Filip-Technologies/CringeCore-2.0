buildscript {

    repositories {
        jcenter()
        mavenLocal()
        mavenCentral()

        maven { url 'https://files.minecraftforge.net/maven' }
        maven { url 'https://plugins.gradle.org/m2' }

        flatDir dirs: 'libs'
    }

    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '2.1-SNAPSHOT'
        classpath group: 'com.github.jengelman.gradle.plugins', name: 'shadow', version: '4.0.4'
        classpath group: 'org.jetbrains.kotlin', name: 'kotlin-gradle-plugin', version: "1.3.72"
    }
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'com.github.johnrengelman.shadow'

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8
compileJava.options.encoding = 'UTF-8'

sourceSets {
    main.java.srcDirs += 'src/main/java'
    main.resources.srcDirs += '/src/main/resources'
}


compileKotlin {
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

idea {
    module {
        inheritOutputDirs = true
    }
}

archivesBaseName = 'CringeCore'

minecraft {
    version = '1.8.9-11.15.1.2318-1.8.9'
    runDir = 'run'
    mappings = 'stable_22'
    makeObfSourceJar = false
}

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
    maven { url 'https://repo.sk1er.club/repository/maven-public' }
}

dependencies {
    implementation "org.reflections:reflections:0.9.12"
    implementation 'club.sk1er:Elementa:129-10809-SNAPSHOT'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.3.72"
    implementation "org.jetbrains.kotlin:kotlin-reflect:1.3.72"
    provided files("libs/modcore.jar")
}

processResources {
    inputs.property 'version', project.version
    inputs.property 'mcversion', project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }

}


jar {
    manifest.attributes(
            'Manifest-Version': 1.0,
    )
}

shadowJar {
    minimize()

    configurations = [project.configurations.compile]

    exclude 'dummyThing'
    exclude 'LICENSE.txt'
    exclude '**/module-info.class'

    classifier = ''
}

configurations {
    external
    compile.extendsFrom external
}

build.dependsOn shadowJar